---
- hosts: dev
  vars:
    deploy_user: "{{ ansible_user | default('ansible') }}"
    db_server: localhost
    db_name: bcstaging
    db_staging: bc-staging
    db_tests: bc-tests
    bcaddress: "{{ bc_domain | default('gitserver.dah') }}"
    db_bc_user: bcstaging
    db_bc_pass: "{{ lookup('passwordstore', 'palladio/mysql/barbearclassico') }}"
    sitepath: "/srv/www/barbearclassico"
    # target: /opt/bc_2020-04-10_09-47.sql
    remotefolder: "barbearclassico/"
    sitebackup: "barbearclassico_2020-04-10c.tgz"
    dbbackup: "bc_2020-05-08_16-02.sql.gz"
    # dbbackup: "bc_2020-04-10_16-08.sql.gz"
    mysql_root_password: "{{ lookup('passwordstore', 'palladio/mysql/barbearclassico') }}"
    mysql_databases:
      - name: "{{ db_name }}"
        encoding: latin1
        collation: latin1_general_ci
      - name: "{{ db_staging }}"
        encoding: latin1
        collation: latin1_general_ci
      - name: "{{ db_tests }}"
        encoding: latin1
        collation: latin1_general_ci
    mysql_users:
      - name: barbearclassico
        host: "%"
        password: "{{ lookup('passwordstore', 'palladio/mysql/barbearclassico') }}"
        priv: "barbearclassico.*:ALL"
      - name: "{{ db_name }}"
        host: "%"
        password: "{{ lookup('passwordstore', 'palladio/mysql/barbearclassico') }}"
        priv: "{{ db_name }}.*:ALL"
      - name: "{{ db_staging }}"
        host: "%"
        password: "{{ lookup('passwordstore', 'mysql/bc/staging') }}"
        priv: "{{ db_staging }}.*:ALL"
      - name: "{{ db_tests }}"
        host: "%"
        password: "{{ lookup('passwordstore', 'mysql/bc/tests') }}"
        priv: "{{ db_tests }}.*:ALL"
    nginx_remove_default_vhost: true
    nginx_vhosts:
      - listen: "443 ssl"
        server_name: "{{ bcaddress }}"
        # server_name_redirect: "www.example.com"
        root: "/srv/www/barbearclassico"
        index: "index.php"
        # error_page: 
        # access_log: "/var/log/nginx/example.error.log"
        # error_log: ""
        state: "present"
        template: "{{ nginx_vhost_template }}"
        filename: "devbc.conf"
        extra_parameters: |
          ssl_certificate /etc/letsencrypt/live/www.barbearclassico.com/fullchain.pem; # managed by Certbot
          ssl_certificate_key /etc/letsencrypt/live/www.barbearclassico.com/privkey.pem; # managed by Certbot
          include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
          ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
          error_page 404 /custom_404.html;
          location ~ \.php$ {
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
          }
          location = /custom_404.html {
                  root /srv/www/error ;
                  internal;
          }
          # ssl_protocols TLSv1.2;
          # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
          # ssl_prefer_server_ciphers off;
       
          # HSTS 
          # add_header Strict-Transport-Security "max-age=63072000" always;
       
          # OCSP stapling
          # ssl_stapling on;
          # ssl_stapling_verify on;
      - listen: "80"
        server_name: "{{ bcaddress }}"
        # server_name_redirect: "www.example.com"
        root: "/srv/www/barbearclassico"
        index: "index.php"
        # error_page: 
        # access_log: "/var/log/nginx/example.error.log"
        # error_log: ""
        state: "present"
        template: "{{ nginx_vhost_template }}"
        filename: "barbearclassico.conf"
        extra_parameters: |
          location ~ \.php$ {
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
          }
  become: yes
  roles:
          #- BCdropbox
    - ansible-role-mysql
          #- ansible-php
          # - ansible-role-nginx
    - bc-dev-provision
      ##- bc-backups
      ##- bcTheme-UX-idesign
      ##  # - ansible-role-barbearclassico
